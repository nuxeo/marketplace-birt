<project name="nuxeo-assembly"
         default="build"
         xmlns:nx="urn:nuxeo-build"
         xmlns:artifact="urn:nuxeo-artifact">
  <taskdef resource="org/nuxeo/build/antlib.xml" uri="urn:nuxeo-build" />
  <taskdef resource="org/nuxeo/build/artifact/antlib.xml"
           uri="urn:nuxeo-artifact" />
  <taskdef resource="net/sf/antcontrib/antlib.xml" />

  <target name="init" unless="init.done">
    <property name="outdir" value="${maven.project.build.directory}" />
    <antcall target="expand" />
    <property name="init.done" value="true" />
  </target>

  <target name="expand">
    <artifact:nuxeo-expand includeTestScope="true" groupPrefixes="org.nuxeo" />
    <!-- For Nuxeo IDE being able to use that distribution as a SDK -->
    <artifact:print output="${outdir}/artifacts-birt.properties" mode="sdk" />
    <artifact:print output="${outdir}/test-artifacts-birt.properties"
                    mode="sdk"
                    scopes="test" />
    <!-- Prints the graph for debugging purpose -->
    <artifact:print output="${outdir}/dependency-tree.log" />
  </target>

  <target name="build"
          depends="init"
          description="Build Nuxeo BIRT Marketplace package">
    <tstamp />
    <delete failonerror="false" dir="${outdir}/nxr" />
    <mkdir dir="${outdir}/nxr" />
    <delete failonerror="false" dir="${outdir}/marketplace" />
    <mkdir dir="${outdir}/marketplace" />
    <copy todir="${outdir}/marketplace">
      <fileset dir="src/main/resources" />
      <filterset>
        <filter token="VERSION" value="${marketplace.birt.version}" />
        <filter token="DISTRIB_VERSION" value="${nuxeo.distribution.version}" />
      </filterset>
    </copy>
    <copy file="${outdir}/artifacts-birt.properties"
          todir="${outdir}/marketplace/install" />
    <copy file="${outdir}/test-artifacts-birt.properties"
          todir="${outdir}/marketplace/install" />

    <!-- Base distribution NXR -->
    <copy todir="${outdir}">
      <artifact:resolveFile key="org.nuxeo.ecm.distribution:nuxeo-distribution-dm::zip" />
    </copy>

    <!-- Nuxeo bundles -->
    <copy todir="${outdir}/nxr/bundles" overwrite="true">
      <artifact:set>
        <includes>
          <artifact groupId="org.nuxeo*" scope="!test" type="!pom" />
        </includes>
      </artifact:set>
    </copy>
    <!-- Third-party libraries -->
    <copy todir="${outdir}/nxr/lib" overwrite="true">
      <artifact:set>
        <includes>
          <artifact groupId="!org.nuxeo*" scope="!test" />
        </includes>
      </artifact:set>
    </copy>
    <move todir="${outdir}/nxr/lib">
      <fileset dir="${outdir}/nxr/bundles">
        <include name="nuxeo-generic-wss-front*" />
        <include name="nuxeo-generic-wss-handler*" />
      </fileset>
    </move>
    <nx:rmdups dir="${outdir}/nxr/lib" />
    <!-- Temporary ZIP Nuxeo NXR to compare with base distribution NXR -->
    <zip destfile="${outdir}/nxr-${marketplace.birt.version}.zip"
         basedir="${outdir}/nxr" />

    <!-- only include files not already provided by the base distribution -->
    <nx:zipdiff file1="${outdir}/nxr-${marketplace.birt.version}.zip"
                file2="${outdir}/nuxeo-distribution-dm-${nuxeo.distribution.version}.zip"
                includesfile="${outdir}/includes"
                excludesfile="${outdir}/excludesfile"
                patternsetid="birt.versus.dm">
    </nx:zipdiff>
    <unzip src="${outdir}/nxr-${marketplace.birt.version}.zip"
           dest="${outdir}/marketplace/install">
      <patternset refid="birt.versus.dm" />
    </unzip>

    <!-- NXP-12166: filter out conflicting JARs -->
    <var name="install.excludes" value="" />
    <loadfile property="jars" srcfile="${outdir}/excludesfile" />
    <for param="line" list="${jars}" delimiter="${line.separator}">
      <sequential>
        <if>
          <matches pattern=".*\.jar" string="@{line}" />
          <then>
            <echo>Excluding @{line}</echo>
            <var name="install.excludes"
                 value="${install.excludes}  &lt;delete file=&quot;${env.home}/@{line}&quot; /&gt;${line.separator}" />
          </then>
        </if>
      </sequential>
    </for>
    <copy file="src/main/resources/install.xml"
          todir="${outdir}/marketplace"
          overwrite="true">
      <filterset>
        <filter token="EXCLUDES" value="${install.excludes}" />
      </filterset>
    </copy>


    <zip destfile="${outdir}/${maven.project.artifactId}-${marketplace.birt.version}.zip"
         basedir="${outdir}/marketplace" />
    <artifact:attach file="${outdir}/${maven.project.artifactId}-${marketplace.birt.version}.zip"
                     target="${maven.project.groupId}:${maven.project.artifactId}"
                     type="zip" />
  </target>

</project>
